name: CI/CD Pipeline for Terraform, Ansible, and Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Terraform
        run: |
          sudo apt-get update && sudo apt-get install -y software-properties-common
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install -y terraform


      - name: Initialize Terraform
        run: terraform init

      - name: Destroy old EC2 instance (if exists)
        run: terraform destroy -auto-approve || echo "No existing instance found"

      - name: Apply Terraform
        run: terraform apply -auto-approve

      - name: Output EC2 Instance IP to File
        run: terraform output -raw vm_ip > instance_ip.txt

      - name: Upload IP file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: instance-ip-file
          path: instance_ip.txt

  ansible:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download the instance IP from Terraform output
        uses: actions/download-artifact@v4
        with:
          name: instance-ip-file

      - name: Read EC2 Instance IP
        run: |
          INSTANCE_IP=$(cat instance_ip.txt)
          echo "EC2 Instance IP: $INSTANCE_IP"

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Set up SSH private key
        run: |
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > my-key-pair.pem
          chmod 600 my-key-pair.pem

      - name: Set up Ansible inventory file
        run: |
          echo "[aws_servers]" > inventory.ini
          echo "$(cat instance_ip.txt) ansible_user=ubuntu ansible_ssh_private_key_file=my-key-pair.pem ansible_ssh_extra_args='-o StrictHostKeyChecking=no -o PasswordAuthentication=no'" >> inventory.ini

      - name: Run Ansible playbook
        run: ansible-playbook -i inventory.ini deploy.yml
